name: Build and test Karamel based on a FStar image
on: push
jobs:
  build:
    runs-on: [self-hosted, linux, X64]
    steps:
      - name: Record initial timestamp
        run: |
          echo "CI_INITIAL_TIMESTAMP=$(date '+%s')" >> $GITHUB_ENV
      - name: Check out repo        
        uses: actions/checkout@v2
      - name: Identify the base FStar branch and the notification channel
        run: |
          echo "FSTAR_BRANCH=$(jq -c -r '.BranchName' .docker/build/config.json)" >> $GITHUB_ENV
          echo "CI_SLACK_CHANNEL=$(jq -c -r '.NotificationChannel' .docker/build/config.json)" >> $GITHUB_ENV
      - name: Determine the build flavor
        run: |
          if docker image inspect fstar:local-branch-$FSTAR_BRANCH ; then echo KRML_CI_FLAVOR=hierarchic >> $GITHUB_ENV ; else echo KRML_CI_FLAVOR=standalone >> $GITHUB_ENV ; fi
      - name: Build Karamel and its dependencies
        run: |
          docker build -t karamel:local-branch-$GITHUB_REF_NAME -t karamel:local-commit-$GITHUB_SHA -f .docker/$KRML_CI_FLAVOR.Dockerfile --build-arg FSTAR_BRANCH=$FSTAR_BRANCH .
      - name: Compute elapsed time
        run: |
          CI_FINAL_TIMESTAMP=$(date '+%s')
          CI_TIME_DIFF=$(( $CI_FINAL_TIMESTAMP - $CI_INITIAL_TIMESTAMP ))
          echo "CI_TIME_DIFF_S=$(( $CI_TIME_DIFF % 60 ))" >> $GITHUB_ENV
          echo "CI_TIME_DIFF_M=$(( ($CI_TIME_DIFF / 60) % 60 ))" >> $GITHUB_ENV
          echo "CI_TIME_DIFF_H=$(( $CI_TIME_DIFF / 3600 ))" >> $GITHUB_ENV
          case ${{ job.status }} in
          (success)
            echo "CI_EMOJI=🐱" >> $GITHUB_ENV
            ;;
          (cancelled)
            echo "CI_EMOJI=😾" >> $GITHUB_ENV
            ;;
          (*)
            echo "CI_EMOJI=😿" >> $GITHUB_ENV
            ;;
          esac
      - name: Post to the Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.16.0
        with:
          channel-id: ${{ env.CI_SLACK_CHANNEL }}
          payload: |
            {
              "blocks" : [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.event.head_commit.url }}|${{ github.event.head_commit.id }}> on (${{ github.ref_name }}) by ${{ github.event.head_commit.author.username }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": ${{ toJSON(github.event.head_commit.message) }}
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ env.CI_EMOJI }} <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|${{ job.status }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "Duration: ${{ env.CI_TIME_DIFF_H }} h ${{ env.CI_TIME_DIFF_M }} min ${{ env.CI_TIME_DIFF_S }} s"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
