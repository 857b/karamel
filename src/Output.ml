(** Decorate each file with a little bit of boilerplate, then print it *)

open Utils
open PPrint

let boilerplate () =
  let default_includes = string
{|/* This file auto-generated by KreMLin! */
#include <inttypes.h>
#include <string.h>
#include <stdio.h>
#include <stdbool.h>
|} in
  let extra_includes = separate_map hardline
    (fun x -> string "#include " ^^ string x) (List.rev !Options.add_include)
  in
  default_includes ^^ hardline ^^ extra_includes

let write_one (name, program) =
  let f =
    if !Options.tmpdir <> "" then
      !Options.tmpdir ^ "/" ^ name ^ ".c"
    else
      name ^ ".c"
  in
  with_open_out f (fun oc ->
    let doc =
      boilerplate () ^^ hardline ^^ hardline ^^
      separate_map (hardline ^^ hardline) PrintC.p_decl_or_function program
    in
    PPrint.ToChannel.pretty 0.95 100 oc doc
  )

let write files =
  List.iter write_one files
